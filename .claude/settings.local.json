{
  "permissions": {
    "allow": [
      "Bash(*)",
      "Bash(go)",
      "Bash(touch)",
      "Bash(./ccagents issue --help)",
      "Bash(./ccagents issue create --help)",
      "Bash(./ccagents issue list --help)",
      "Bash(./ccagents issue show --help)",
      "Bash(./ccagents issue update --help)",
      "Bash(./ccagents issue comment --help)",
      "Bash(go mod:*)",
      "Bash(go test:*)",
      "Bash(mkdir:*)",
      "Bash(go get:*)",
      "Bash(make:*)",
      "Bash(./bin/ccagents:*)",
      "Bash(git add:*)",
      "Bash(go doc:*)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(rm:*)",
      "Bash(git push:*)",
      "Bash(go build:*)",
      "Bash(go list:*)",
      "Bash(go vet:*)",
      "Bash(touch:*)",
      "Bash(chmod:*)",
      "Bash(go tool cover:*)",
      "Bash(timeout 30s go test -short -coverprofile=coverage.out ./...)",
      "Bash(mv:*)",
      "Bash(golangci-lint run:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(golangci-lint:*)",
      "Bash(gofmt:*)",
      "Bash(timeout:*)",
      "mcp__ide__getDiagnostics",
      "Bash(goimports:*)",
      "Bash(go fmt:*)",
      "Bash(git reset:*)",
      "Bash(time go test ./pkg/agents/architecture_agent_test.go -v)",
      "Bash(time go test ./pkg/agents/... -v)",
      "Bash(time go test ./pkg/workflow/events_test.go -run TestEventBus_PublishAndReceive)",
      "Bash(go help:*)",
      "Bash(nproc)",
      "Bash(sysctl:*)",
      "WebFetch(domain:pkg.go.dev)",
      "Bash(go run:*)",
      "Bash(go run:*)",
      "Bash(time make:*)",
      "Bash(time go test ./pkg/ui/ ./pkg/agents/ -short)",
      "Bash(time go test ./pkg/ui/)",
      "Bash(time go test ./pkg/workflow/ -short)",
      "Bash(time go test ./pkg/workflow)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(go install:*)",
      "Bash(errcheck:*)",
      "Bash(gosec:*)",
      "Bash(echo:*)",
      "Bash(gocyclo:*)",
      "Bash(~/go/bin/gocyclo -over 15 .)",
      "WebFetch(domain:github.com)",
      "Bash(~/.claude/local/claude --version)",
      "Bash(git checkout:*)"
    ],
    "deny": []
  }
}